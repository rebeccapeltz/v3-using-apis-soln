{"version":3,"sources":["webpack:///src/src/App.vue","webpack:///src/views/src/views/Rhymesaurus.vue"],"names":[],"mappings":"AAcA,KACA,8CAAA,AACA,mCAAA,AACA,kCAAA,AACA,kBAAA,AACA,cAAA,AACA,eAAA,CACA,ACsCA,8BACA,gBAAA,CACA,AAEA,kCACA,gBAAA,AACA,iBAAA,AACA,kBAAA,AACA,6BAAA,AACA,YAAA,AACA,iBAAA,AACA,cAAA,AACA,gBAAA,AACA,2BAAA,AACA,aAAA,CACA,AACA,wBACA,gBAAA,AACA,cAAA,AACA,gBAAA,AACA,WAAA,AACA,YAAA,AACA,eAAA,AACA,gBAAA,CACA,AACA,wCACA,eAAA,CACA,AAEA,4BACA,qBAAA,AACA,SAAA,CACA,AAEA,6BACA,qBAAA,AACA,YAAA,AACA,sBAAA,AACA,cAAA,AACA,YAAA,AACA,iBAAA,AACA,WAAA,AACA,yBAAA,CACA,AACA,2BACA,oBAAA,CACA,AACA,4BACA,qBAAA,AACA,UAAA,AACA,cAAA,AACA,aAAA,CACA,AAEA,mBACA,aAAA,CACA","file":"app.364f2c4d.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Rhymesaurus: The Rhyming Thesaurus</h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>","<template>\n  <div class=\"rhymesaurus\">\n    <form><!-- TODO: Use a submit event handler to allow the findWords method to handle this form submission. -->\n      <p>Find rhymes for <input type=\"text\" v-model=\"rhyme\"> related to <input type=\"text\" v-model=\"phrase\"> <button type=\"submit\">Search</button></p>\n    </form>\n    <!-- TODO: Add a v-if conditional to make this results list show only if there are results and if the length is greater than 0. -->\n    <ul class=\"results\">\n      <!-- TODO: Add a v-for loop to the LI tag to loop through the items in the results. -->\n      <li class=\"item\">\n        <p><strong><!-- TODO: Output word --></strong></p>\n        <p><!-- TODO: Output score --></p>\n      </li>\n    </ul>\n\n    <!-- TODO: Add a `v-else-if` conditional to make this message only show if there are no results returned (but we have actually attempted a request). -->\n    <div class=\"no-results\">\n      <h2>No Words Found</h2>\n      <p>Please adjust your search to find more words.</p>\n    </div>\n\n    <!-- TODO: Add a v-if conditional to make this errors list show only if there are errors and if the length is greater than 0. -->\n    <ul class=\"errors\">\n      <!-- TODO: Add a v-for loop to the LI tag to loop through the errors. -->\n      <li>\n        <!-- TODO: Output each error. -->\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n// TODO: Import axios properly here.\n\nexport default {\n  name: 'Rhymesaurus',\n  data () {\n    return {\n      results: null,\n      errors: [],\n      phrase: '',\n      rhyme: ''\n    }\n  }\n    // TODO: Create the findWords method.\n\n    // TODO: Complete the following inside of the findWords method.\n      // TODO: Create an axios.get statement that requests from https://api.datamuse.com/words\n      // TODO: Create the params object\n      // TODO: Set the `ml` parameter equal to `this.phrase`\n      // TODO: Set the `rel_ehy` parameter equal to `this.rhyme`\n      // TODO: Create a `then` clause\n      // TODO: Inside the `then` clause, set `this.results` equal to `response.data`\n      // TODO: Create a `catch` clause\n      // TODO: Inside the `catch` clause, push the new `error` onto the `this.errors` array\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.rhymesaurus {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\nul.errors {\n  list-style-type: none;\n}\n.errors li {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\n\na {\n  color: #42b983;\n}\n</style>"]}